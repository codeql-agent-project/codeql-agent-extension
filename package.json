{
	"name": "codeql-agent",
	"displayName": "CodeQL Agent",
	"description": "",
	"version": "0.0.3",
	"icon": "media/icon-marketplace.png",
	"engines": {
		"vscode": "^1.64.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/vovikhangcdv/codeql-agent-extension"
	},
	"publisher": "DoubleVKay",
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:codeql-agent.scan",
		"onCommand:codeql-agent.scan-folder",
		"onCommand:codeql-agent.go-to-settings",
		"onCommand:codeql-agent.build-database",
		"onCommand:codeql-agent.build-database-folder",
		"onCommand:codeql-agent.test"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "codeql-agent.scan",
				"title": "CodeQL Agent: Scan"
			},
			{
				"command": "codeql-agent.scan-folder",
				"title": "CodeQL Agent: Choose project folder to scan"
			},
			{
				"command": "codeql-agent.go-to-settings",
				"title": "CodeQL Agent: Go to settings"
			},
			{
				"command": "codeql-agent.build-database",
				"title": "CodeQL Agent: Build database only (current project)"
			},
			{
				"command": "codeql-agent.build-database-folder",
				"title": "CodeQL Agent: Build database only from folder"
			},
			{
				"command": "codeql-agent.test",
				"title": "CodeQL Agent: Test"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "ql-agent-container",
					"title": "CodeQL Agent",
					"icon": "media/logo.svg"
				}
			]
		},
		"views": {
			"ql-agent-container": [
				{
					"id": "codeQLProject",
					"name": "Project"
				},
				{
					"id": "codeQLSettings",
					"name": "Configuration"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "codeQLProject",
				"contents": "Execute static application security testing (SAST) with CodeQL.\n[Scan](command:codeql-agent.scan) \n[Scan folder](command:codeql-agent.scan-folder) \n Build database only without executing SAST. \n[Build database](command:codeql-agent.build-database)\n[Build database from](command:codeql-agent.build-database-folder)"
			},
			{
				"view": "codeQLSettings",
				"contents": "Go to settings: CLI, source, language, output,... \n[Settings](command:codeql-agent.go-to-settings)"
			}
		],
		"configuration": [
			{
				"id": "cli",
				"type": "object",
				"title": "CLI",
				"properties": {
					"codeql-agent.cli.dockerExecutablePath": {
						"scope": "window",
						"type": "string",
						"default": "",
						"markdownDescription": "Path to the Docker executable that should be used by the CodeQL extension. If empty, the extension will look for a Docker executable on your shell PATH, or if Docker is not on your PATH, download and manage its own Docker executable."
					}
				}
			},
			{
				"id": "project",
				"type": "object",
				"title": "Project",
				"properties": {
					"codeql-agent.project.outputPath": {
						"scope": "window",
						"type": "string",
						"default": "",
						"markdownDescription": "Path to the output folder. Please enter full path. Default is ${currentProjectPath}/codeql-agent-results"
					},
					"codeql-agent.project.overwriteFlag": {
						"type": "boolean",
						"default": false,
						"description": "Enable overwrite database when database path is exists and not an empty directory. This flag is useful for forcely rebuild database."
					},
					"codeql-agent.project.language": {
						"type": "string",
						"default": "Auto detect",
						"enum": [
							"cpp",
							"csharp",
							"go",
							"java",
							"javascript",
							"python",
							"ruby"
						]
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.64.0",
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"@vscode/test-electron": "^2.0.3",
		"eslint": "^8.6.0",
		"glob": "^7.2.0",
		"mocha": "^9.1.3",
		"typescript": "^4.5.5"
	},
	"dependencies": {
		"@types/fs-extra": "^9.0.13",
		"fs-extra": "^10.0.0"
	}
}
